{"version":3,"sources":["showusers.js","Inputuser.js","App.js","reportWebVitals.js","index.js"],"names":["ShowUser","props","list","InputUser","useState","name","setName","users","setUsers","isLoading","setIsLoading","isEmpty","setEmpty","SearchUser","useCallback","value","apiUrl","console","log","fetch","then","res","json","result","items","map","item","login","filter","startsWith","prev","concat","useEffect","className","type","onChange","e","target","style","display","user","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAMeA,EAJE,SAACC,GAChB,OAAO,8BAAMA,EAAMC,QC6ENC,EA5EG,WAChB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEA,EAA4BN,oBAAS,GAArC,mBAAOO,EAAP,KAAgBC,EAAhB,KAIMC,EAAaC,uBAAY,SAACC,GAC9BP,EAAS,IACTI,GAAS,GAET,IAAII,EANa,yCAMSD,EAC1BE,QAAQC,IAAIF,GACZG,MAAMH,GACHI,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAKL,GAJAN,QAAQC,IAAIK,GAEZN,QAAQC,IAAIK,EAAOC,OAEfD,EAAOC,MAAO,CAChB,IAAMA,EAAQD,EAAOC,MAClBC,KAAI,SAACC,GAAD,OAAUA,EAAKC,SACnBC,QAAO,SAACF,GAAD,OAAUA,EAAKG,WAAWd,MAEpCP,GAAS,SAACsB,GAIR,OAHApB,GAAa,GACbE,GAAS,GAEFkB,EAAKC,OAAOP,MAGrBP,QAAQC,IAAIX,OAGlBU,QAAQC,IAAIX,KACX,IAEHyB,qBAAU,WACRnB,MACC,CAACA,IAQJ,OACE,gCACE,uBAAOoB,UAAU,MAAMC,KAAK,OAAOnB,MAAOV,EAAM8B,SAR/B,SAACC,GACpB9B,EAAQ8B,EAAEC,OAAOtB,OACjBE,QAAQC,IAAI,OAAQb,GACpBQ,EAAWuB,EAAEC,OAAOtB,UAMlB,uBACA,qBAAKuB,MAAO,CAAEC,QAAS5B,EAAU,eAAiB,QAAlD,uBAIA,qBAAK2B,MAAO,CAAEC,QAAS9B,EAAY,eAAiB,QAApD,wBAICF,EAAMkB,KAAI,SAACe,GAEV,OACE,8BACE,cAAC,EAAD,CAAUtC,KAAMsC,EAAMhC,SAAUA,aCzD7BiC,MAXf,WACE,OACE,wBAAQR,UAAU,aAAlB,SACE,sBAAKA,UAAU,MAAf,UACE,8DACA,cAAC,EAAD,UCGOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.fb6eb09e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ShowUser = (props) => {\r\n  return <div>{props.list}</div>;\r\n};\r\n\r\nexport default ShowUser;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport ShowUser from \"./showusers\";\r\n\r\nconst InputUser = () => {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  \r\n  const [isEmpty, setEmpty] = useState(true);\r\n\r\n  const apiBaseUrl = \"https://api.github.com/search/users?q=\";\r\n\r\n  const SearchUser = useCallback((value) => {\r\n    setUsers([]);\r\n    setEmpty(true);\r\n\r\n    let apiUrl = apiBaseUrl + value;\r\n    console.log(apiUrl);\r\n    fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n\r\n        console.log(result.items);\r\n\r\n        if (result.items) {\r\n          const items = result.items\r\n            .map((item) => item.login)\r\n            .filter((item) => item.startsWith(value));\r\n\r\n          setUsers((prev) => {\r\n            setIsLoading(false);\r\n            setEmpty(false);\r\n\r\n            return prev.concat(items);\r\n          });\r\n\r\n          console.log(users);\r\n        }\r\n      });\r\n    console.log(users);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    SearchUser();\r\n  }, [SearchUser]);\r\n\r\n  const onChangeName = (e) => {\r\n    setName(e.target.value);\r\n    console.log(\"name\", name);\r\n    SearchUser(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input className=\"App\" type=\"text\" value={name} onChange={onChangeName} />\r\n      <br></br>\r\n      <div style={{ display: isEmpty ? \"inline-block\" : \"none\" }}>\r\n        No Result\r\n      </div>\r\n\r\n      <div style={{ display: isLoading ? \"inline-block\" : \"none\" }}>\r\n        ...loading\r\n      </div>\r\n\r\n      {users.map((user) => {\r\n        //console.log(user);\r\n        return (\r\n          <div>\r\n            <ShowUser list={user} setUsers={setUsers} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputUser;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport InputUser from \"./Inputuser\";\r\n\r\nfunction App() {\r\n  return (\r\n    <header className=\"App-header\">\r\n      <div className=\"App\">\r\n        <h2>search for github users here</h2>\r\n        <InputUser />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}